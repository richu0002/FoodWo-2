<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>

    <style>
        /* Hide the "No file chosen" text */
        .custom-file-input::file-selector-button {
            display: none;
        }
    </style>
</head>

<body>
    <!-- navigation -->
    <nav class="py-4 px-5 md:px-10 flex justify-between items-center shadow-2xl">
        <div class="text-center p-2 bg-MainSearchBg">
            <span class="text-orange-500 font-bold text-2xl md:text-3xl ">FoodWo</span>
        </div>
        <div class="flex justify-between items-center">
            <a href="/login" class="font-semibold text-xl mx-2">Login</a>
            <a href="/signup"
                class="px-4 text-center py-2 text-white bg-orange-500 rounded-full mx-2 md:text-xl">Signup</a>
        </div>
    </nav>

    <!-- main section -->
    <section class="mt-10 px-5 overflow-x-hidden">
        <h1 class="my-5 text-center font-bold text-orange-500 text-2xl md:text-4xl">Sign Up</h1>

        <div class="">
            <div class="mx-auto md:w-1/2 md:px-4">
                <!-- Input Fields -->
                <form id="form">
                    <div class="flex flex-col my-2">
                        <label for="">Full Name</label>
                        <input type="text" name="fullname" maxlength="20" id="fullname" placeholder="Enter fullname"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                    </div>
                    <div class="flex flex-col my-2">
                        <label for="">Email</label>
                        <input type="email" name="email" id="email" placeholder="Enter Email"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                    </div>
                    <div class="flex flex-col my-2">
                        <label for="">Phone</label>
                        <input type="tel" maxlength="10" name="phone" id="phone" placeholder="Enter Phone no."
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                    </div>
                    <div class="flex flex-col my-2">
                        <label for="">Address</label>
                        <input type="text" name="address" id="address" placeholder="Enter Address"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                    </div>
                    <div class="flex flex-col my-2">
                        <label for="">Password</label>
                        <input type="password" name="password" id="password" autocomplete="new-password"
                            placeholder="Enter Password"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                    </div>
                    <div class="flex flex-col my-2">
                        <label for="">Referal Code</label>
                        <input type="text" name="referCode" id="referCode" placeholder="Referal Code (optional)"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        <div class="text-end my-2"><span onclick="verifyReferalCode(event)"
                                class="text-orange-500 cursor-pointer">verify code</span></div>
                    </div>
                </form>
            </div>
        </div>

        <div class="my-8 text-center">
            <button type="submit" onclick="handleSignIn(event)"
                class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">Create</button>
        </div>


        <div id="toast"
            class="transition delay-150 bg-orange-500 py-3 px-4 text-center w-56 rounded text-white mx-auto my-2 ease-linear opacity-0 -translate-x-full">
        </div>


    </section>

    <!-- footer -->
    <%- include('userFooter') %>


        <script>
            // let baseImage = "";
            // // Image Details
            // const image = document.getElementById('doc');
            // const imagetag = document.getElementById('imagetag');
            // const uploadtext = document.getElementById('uploadtext');
            // const userIcon = document.getElementById('userIcon');

            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toastMessage');

            let codeVerifiedOrNot = false;



            // image.addEventListener('change', async (event) => {
            //     baseImage = event.target.files[0];
            // if (file) {
            //     baseImage = await ImagetoBase64(file);
            //     imagetag.style.display = "block";
            //     userIcon.style.display = "none";
            //     uploadtext.style.display = "none";
            //     imagetag.setAttribute("src", baseImage);
            // }
            // });

            // async function ImagetoBase64(file) {
            //     const reader = new FileReader();
            //     reader.readAsDataURL(file);

            //     return new Promise((resolve, reject) => {
            //         reader.onload = () => resolve(reader.result);
            //         reader.onerror = err => reject(err);
            //     });
            // }

            async function handleSignIn(event) {
                event.preventDefault();
                //User Details
                const fullname = document.getElementById('fullname').value;
                const email = document.getElementById('email').value;
                const phone = document.getElementById('phone').value;
                const address = document.getElementById('address').value;
                const password = document.getElementById('password').value;
                const referCode = document.getElementById('referCode').value;


                const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d).{8,}$/;
                const isPasswordValid = passwordRegex.test(password);

                const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

                // Check if the email address matches the regular expression
                const isEmailValid = emailRegex.test(email);

                if (!fullname || !email || !phone || !address || !password) {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> All fields are required.</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000)
                }
                else if (!isEmailValid) {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Please enter a valid email address.</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000);
                }
                else if (phone.length < 10) {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Please enter a valid phone no.</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000);
                } else if (!isPasswordValid) {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Password must be 8 characters and least one capital letter, one small letter, and one number.</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000)
                } else if (referCode !== "" && !codeVerifiedOrNot) {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Verify you code before creating your Account.</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000)
                }
                else {
                    const formData = {
                        fullname: fullname,
                        email: email,
                        phone: phone,
                        address: address,
                        password: password,
                        referCode: referCode
                    }


                    const userData = await JSON.stringify(formData);
                    sessionStorage.setItem('signUpUserDetails', userData);
                    console.log("userdDATA :: : :", formData)
                    try {
                        // Send a POST request to the server using async/await
                        const response = await fetch(`/signup`, {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                                // 'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: userData,
                        });
                        if (!response.ok) {
                            // Handle the case where the server returns an error
                            // throw new Error(`Server responded with status: ${response.status}`);
                            const data = await response.json();
                            console.log("DAta ::  ", data);
                            if (data.failed) {
                                toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.failed}</span>`;
                                toast.classList.remove("opacity-0");
                                toast.classList.remove("-translate-x-full");
                                setTimeout(() => {
                                    toast.classList.add("opacity-0");
                                    toast.classList.add("-translate-x-full");
                                }, 3000);
                            }

                        }
                        if (response.ok) {
                            window.location.href = "/otpVerify"
                        }


                        // Handle the server's response here (e.g., display a success message or handle errors)
                        // console.log("data from back : ",data);
                    } catch (error) {
                        // Handle any network, request, or other errors here
                        console.error(error);
                    }
                }
            }

            async function verifyReferalCode(event) {
                event.preventDefault();
                const referCode = document.getElementById('referCode').value;
                if (referCode == "") {
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Enter Referal code for verifying</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000);
                    return;
                }
                console.log(`/verify-referal?code=${referCode.trim()}`)
                const res = await fetch(`/verify-referal?code=${referCode.trim()}`);
                if (res.status == 400) {
                    const data = await res.json();
                    toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.failed}</span>`;
                    toast.classList.remove("opacity-0");
                    toast.classList.remove("-translate-x-full");
                    setTimeout(() => {
                        toast.classList.add("opacity-0");
                        toast.classList.add("-translate-x-full");
                    }, 3000);
                    return;
                }
                if (res.ok) {
                    console.log(res)
                    const data = await res.json();
                    console.log(data)
                    if (data.sucess) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-check text-xl"></i> Your Referal Code has been verified.</span>`;
                        toast.classList.remove("opacity-0");
                        toast.classList.remove("-translate-x-full");
                        setTimeout(() => {
                            toast.classList.add("opacity-0");
                            toast.classList.add("-translate-x-full");
                        }, 3000);
                        codeVerifiedOrNot = true;
                    }
                }
            }





        </script>
</body>

</html>