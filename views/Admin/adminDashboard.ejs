<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Admin Dashboard</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
</head>

<body class="bg-[#EAEFF8]">
    <%- include('adminNavbar') %>

        <!-- Main controlls -->
        <section class="px-4 py-2">
            <div class="flex flex-col md:flex-row items-center justify-center px-4 py-5">
                <div onclick="redirectTo('/admin/orders')"
                    class="transition delay-150 py-3 px-2 text-white bg-[#80FF00] mx-3 my-3 h-32 w-52 text-center flex flex-col justify-center items-center font-bold rounded shadow-md cursor-pointer text-xl ease-linear hover:-translate-y-2">
                    <span class="">New Orders</span>
                    <span class=""><%=ordersCount%> <i class="fa-solid fa-book text-xl text-orange-500"></i></span>
                </div>
                <div
                    class="transition delay-150 py-3 px-2 text-white bg-[#2279FB] mx-3 my-3 h-32 w-52 text-center flex flex-col justify-center items-center font-bold rounded shadow-md cursor-pointer text-xl ease-linear hover:-translate-y-2">
                    <span class="">Total Revenue</span>
                    <span class=""><i class="fa-solid fa-indian-rupee-sign text-xl text-orange-500"></i><%=totalProfit%></span>
                </div>
                <div onclick="redirectTo('/admin/users')"
                    class="transition delay-150 py-3 px-2 text-white bg-[#FED000] mx-3 my-3 h-32 w-52 text-center flex flex-col justify-center items-center font-bold rounded shadow-md cursor-pointer text-xl ease-linear hover:-translate-y-2">
                    <span class="">New Users</span>
                    <span class=""><%=usersCount%> <i class="fa-solid fa-users text-2xl text-orange-500 "></i></span>
                </div>
            </div>
        </section>

        <!-- Charts  -->
        <section class="px-4 py-2">
            <h1 class="my-5 text-3xl text-center font-bold">Sales Report</h1>

            <div class="px-5">
                <!-- Add buttons for Monthly and Yearly sales filtering -->
                <button class="my-5 mx-2 border border-orange-500 text-center px-3 py-2 rounded hover:bg-orange-500 hover:text-white" onclick="loadSalesData('monthly')">Monthly Sales</button>
                <button class="my-5 mx-2 border border-orange-500 text-center px-3 py-2 rounded hover:bg-orange-500 hover:text-white" onclick="loadSalesData('yearly')">Yearly Sales</button>

                <div class="flex flex-wrap gap-5 justify-center items-center">
                    <!-- Wrap canvas in a container for better styling -->
                    <div class="chart-container px-5 py-2 w-80 bg-slate-200 rounded-xl">
                        <canvas id="myChart1"></canvas>
                    </div>
                    <!-- Wrap canvas in a container for better styling -->
                    <div class="chart-container px-5 py-2 w-80 bg-slate-200 rounded-xl">
                        <canvas id="myChart2"></canvas>
                    </div>
                    <!-- Wrap canvas in a container for better styling -->
                    <div class="chart-container px-5 py-2 w-80 bg-slate-200 rounded-xl">
                        <canvas id="myChart3"></canvas>
                    </div>
                </div>

            </div>
        </section>

        <!-- Top Selling & Purchase -->
        <section class="flex flex-col md:flex-row justify-evenly items-center px-5 py-2">
            <div class="bg-green-50 mx-2 my-3 py-3 px-4 shadow-md">
                <h1 class="font-semibold border-b-2 my-2 border-b-orange-500 py-2">Top Selling Food Items</h1>
                <% if(topCust) { topProd.forEach((item)=>{ %>
                    <div class="flex justify-between items-center border-b-2 py-2">
                        <div class="hidden md:block md:w-20 md:h-20 mx-2"><img
                                class="w-full h-full object-cover rounded" src="/<%= item.productImages[0] %>"
                                alt="productImage"></div>
                        <div class="mx-2">
                            <h3 class="font-semibold md:text-lg text-start">
                                <%= item.productName %>
                            </h3>
                        </div>
                        <div class="mx-2 flex justify-center items-center"><i
                                class="fa-regular fa-star text-orange-500"></i> <span
                                class="mx-1 font-semibold">4.2</span></div>
                        <div class="mx-2 flex"><span class="text-orange-500">â‚¹<%= item.productPrice%></span><span
                                class="hidden md:block">/<%= item.productType %></span></div>
                    </div>
                    <% }) } %>

            </div>
            <div class="bg-green-50 mx-2 my-3 py-3 px-4 shadow-md">
                <h1 class="font-semibold border-b-2 my-2 border-b-orange-500 py-2">Top Users</h1>
                <% if(topCust) { topCust.forEach((user)=>{ %>
                    <div class="flex justify-between items-center border-b-2 py-2">
                        <div class="hidden md:block w-10 h-10 md:w-20 md:h-20 mx-2"><img
                                class="w-full h-full object-cover rounded" src="/<%= user.image%>" alt="userProfile">
                        </div>
                        <div class="mx-2 text-start"><span class="font-bold text-start">
                                <%= user.fullname %>
                            </span></div>
                        <div class="mx-4"><span class="text-orange-500 font-semibold">
                                <%= user.purchaseCount %>
                            </span> <span>Times</span></div>
                    </div>
                    <% }) } %>
            </div>
        </section>

        <!-- Footer  -->
        <%- include('adminFooter') %>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

            <script>
                function redirectTo(endpoint) {
                    window.location.href = endpoint;
                }

                const ctx1 = document.getElementById('myChart1');
                const ctx2 = document.getElementById('myChart2');
                const ctx3 = document.getElementById('myChart3');
                let chartData = {}; // Variable to store chart data

                // Function to load sales data based on the filter
                async function loadSalesData(filter) {
                    try {
                        const response = await fetch(`/admin/sales-filter?filter=${filter}`);
                        chartData = await response.json();

                        updateChart();
                    } catch (error) {
                        console.error('Error fetching sales data:', error);
                    }
                }

                // Function to update the chart based on the loaded data
                function updateChart() {
                    // Destroy existing charts before creating new ones
                    if (window.barChart) {
                        window.barChart.destroy();
                    }

                    if (window.lineChart) {
                        window.lineChart.destroy();
                    }

                    if (window.pieChart) {
                        window.pieChart.destroy();
                    }

                    // Create and update the bar chart
                    window.barChart = new Chart(ctx1, {
                        type: 'bar',
                        data: {
                            labels: chartData.labels,
                            datasets: [{
                                label: 'Sales',
                                data: chartData.data,
                                borderWidth: 1,
                                backgroundColor: generateRandomColors(chartData.labels.length),
                                borderColor: 'rgba(255, 255, 255, 1)', // Border color
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'category',
                                    labels: chartData.labels,
                                },
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                    // Create and update the line chart
                    window.lineChart = new Chart(ctx2, {
                        type: 'line',
                        data: {
                            labels: chartData.labels,
                            datasets: [{
                                label: 'Sales',
                                data: chartData.data,
                                borderWidth: 1,
                                borderColor: 'rgba(255, 161, 181, 0.2)', // Border color
                                backgroundColor: generateRandomColors(chartData.labels.length), // Fill color
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'category',
                                    labels: chartData.labels,
                                },
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                    // Create and update the pie chart
                    window.pieChart = new Chart(ctx3, {
                        type: 'pie',
                        data: {
                            labels: chartData.labels,
                            datasets: [{
                                label: 'Sales',
                                data: chartData.data,
                                borderWidth: 1,
                                borderColor: 'rgba(255, 255, 255, 1)', // Border color
                                backgroundColor: generateRandomColors(chartData.labels.length),
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'category',
                                    labels: chartData.labels,
                                },
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                    // Function to generate random colors
                    function generateRandomColors(numColors) {
                        const colors = [];
                        for (let i = 0; i < numColors; i++) {
                            colors.push(`rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.7)`);
                        }
                        return colors;
                    }

                }

                // Initial load (you can choose monthly or yearly as default)
                loadSalesData('monthly');
            </script>
</body>

</html>