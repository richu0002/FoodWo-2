<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Number Verification</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
    <style>
        /* Hide the default scrollbar */
        .overflow-x-scroll::-webkit-scrollbar {
            display: none;
        }

        /* Define the scrollbar track (optional) */
        .overflow-x-scroll::-webkit-scrollbar-track {
            background: transparent;
            /* You can customize the track's appearance */
        }

        /* Define the scrollbar thumb (optional) */
        .overflow-x-scroll::-webkit-scrollbar-thumb {
            background: transparent;
            /* You can customize the thumb's appearance */
        }

        .text-ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>

<body>
    <%-include('../views/userNavbar.ejs') %>
        <section class="px-5 py-2 h-screen">
            <h1 class="mt-20 text-center font-bold text-orange-500 text-2xl md:text-3xl">Verification</h1>

            <div class="px-5 w-1/2 mx-auto py-3">
                <form action="" class="w-full">
                    <div class="flex flex-col my-2 w-full">
                        <label for="">Phone Number</label>
                        <input type="tel" name="" maxlength="10" id="phone" placeholder="Enter Phone Number"
                            class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500 w-full">
                    </div>
                    <div class="my-8 text-center">
                        <button type="submit" onclick="verifyPhone(event)"
                            class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">verify</button>
                    </div>
                    <div id="toast"
                        class="transition delay-150 bg-orange-500 py-3 px-4 text-center w-56 rounded text-white mx-auto ease-linear opacity-0 -translate-x-full">
                    </div>
                </form>
            </div>
        </section>
        <%-include('../views/userFooter.ejs') %>


            <script>
                async function verifyPhone(event) {
                    event.preventDefault();
                    const phone = document.getElementById('phone').value;
                    if (!phone) {
                        const toast = document.getElementById('toast');
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Enter your Phone Number.</span>`;
                        toast.classList.remove("opacity-0");
                        toast.classList.remove("-translate-x-full");
                        setTimeout(() => {
                            toast.classList.add("opacity-0");
                            toast.classList.add("-translate-x-full");
                        }, 3000)
                    } else if (phone.length < 10) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Please enter a valid phone number</span>`;
                        toast.classList.remove("opacity-0");
                        toast.classList.remove("-translate-x-full");
                        setTimeout(() => {
                            toast.classList.add("opacity-0");
                            toast.classList.add("-translate-x-full");
                        }, 3000);
                    } else {
                        const data = {
                            phone: phone
                        }
                        const reqData = JSON.stringify(data);
                        toast.innerHTML = `<span id="toastMessage" class="text-sm">Loading...</span>`;
                        toast.classList.remove("opacity-0");
                        toast.classList.remove("-translate-x-full");

                        const response = await fetch('/verifyPhone', {
                            method: 'POST',
                            headers: {
                                'Content-Type': "application/json",
                            },
                            body: reqData
                        })

                        if (response.ok) {
                            const resData = await response.json();
                            console.log(resData)
                            if (!resData.sended) {
                                toast.innerHTML = `<span id="toastMessage" class="text-sm">couldn't send url to ${phone}.Please try after some time. </span>`;
                                toast.classList.remove("opacity-0");
                                toast.classList.remove("-translate-x-full");
                                setTimeout(() => {
                                    toast.classList.add("opacity-0");
                                    toast.classList.add("-translate-x-full");
                                }, 3000);
                            } if (resData.sended) {
                                toast.innerHTML = `<span id="toastMessage" class="text-sm">reset url has been send to ${phone} </span>`;
                                toast.classList.remove("opacity-0");
                                toast.classList.remove("-translate-x-full");
                                setTimeout(() => {
                                    toast.classList.add("opacity-0");
                                    toast.classList.add("-translate-x-full");
                                }, 3000);
                            }
                        }
                        if (!response.ok) {
                            const resData = await response.json();
                            if (resData.err) {
                                toast.innerHTML = `<span id="toastMessage" class="text-sm">${resData.err} </span>`;
                                toast.classList.remove("opacity-0");
                                toast.classList.remove("-translate-x-full");
                                setTimeout(() => {
                                    toast.classList.add("opacity-0");
                                    toast.classList.add("-translate-x-full");
                                }, 3000);
                            }
                        }

                    }
                }

            </script>
</body>

</html>