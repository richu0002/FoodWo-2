<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wallet</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        /* Hide the default scrollbar */
        .overflow-x-scroll::-webkit-scrollbar {
            display: none;
        }

        /* Define the scrollbar track (optional) */
        .overflow-x-scroll::-webkit-scrollbar-track {
            background: transparent;
            /* You can customize the track's appearance */
        }

        /* Define the scrollbar thumb (optional) */
        .overflow-x-scroll::-webkit-scrollbar-thumb {
            background: transparent;
            /* You can customize the thumb's appearance */
        }

        .text-ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>

<body>
    <%- include('userNavbar')%>
        <section class="px-5 py-2 min-h-screen">
            <div id="alert"
                class="transition delay-150 bg-orange-500 py-3 px-4 text-center w-56 rounded text-white mx-auto ease-linear opacity-0 -translate-x-full">
                <span id="alertMsg"></span>
            </div>
            <div class="flex flex-col md:flex-row justify-evenly items-center mt-10 py-5">
                <div class="md:w-96 mx-5">
                    <h1 class="text-2xl md:text-4xl font-bold text-center">Let's Make it easy by,<br>
                        Using <span class="text-orange-500">FoodWo</span> Wallet</h1>
                    <h3 class="mt-5 text-gray-500 text-center">FoodWo Wallet allows you to make instant payments for purchasing food
                        items without any
                        transactions issues caused by the banks</h3>
                </div>
                <div class="px-5 py-3 mt-10 mx-5 flex flex-col justify-center items-center">
                    <p class="text-3xl md:text-5xl font-semibold my-3"><span class="text-gray-500">Balance</span> <span
                            class="text-orange-500">â‚¹</span><%= data?.balance?data.balance:0%>
                    </p>
                    <div class="flex justify-center items-center">
                        <div
                            class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">
                            500</div>
                        <div
                            class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">
                            1000</div>
                        <div
                            class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">
                            2000</div>
                        <div
                            class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">
                            3000</div>
                    </div>
                    <button class="px-3 py-2 rounded bg-orange-500 text-white hover:bg-orange-600 my-5"
                        onclick="addMoney(event)">Add Money</button>
                </div>
            </div>
            <% if(data?.history){%>
                <div class="text-center mt-10">
                    <h1 class="text-gray-500 font-bold text-xl">Payment History</h1>
                    <% data.history.forEach((his)=>{%>
                        <div class="my-5">
                            <div class="my-2 py-3 px-5 bg-gray-200 rounded flex justify-between"><span
                                    class="text-lg">Date : <%=his.date%></span> <span
                                    class="text-lg <%=his.update=='inc'?'text-green-500':'text-red-500'%> font-semibold"><%= his.update=="inc"?'added':'purchased'%> <%=his.amt%><%= his.update=="inc"?'+':'-'%></span></div>
                        </div>
                        <%})%>
                </div>
                <%}%>
        </section>
        <%- include('userFooter')%>

            <script>
                const alertBox = document.getElementById('alert')
                const alertMsg = document.getElementById('alertMsg')
                const amount = document.querySelectorAll('.amt');
                let selectedAmt;

                amount.forEach((amt) => {
                    amt.addEventListener('click', () => {
                        if (amt.classList.contains('bg-orange-700')) {
                            amt.classList.remove('bg-orange-700')
                            amt.classList.remove('text-white')
                            amt.classList.add('text-orange-500')
                            selectedAmt = null;
                        } else {
                            amt.classList.add('bg-orange-700')
                            amt.classList.remove('text-orange-500')
                            amt.classList.add('text-white')
                        }
                        selectedAmt = parseInt(amt.innerText)
                        console.log(selectedAmt)
                    })
                })

                function initPayment(data) {
                    console.log("amount :", data)
                    const options = {
                        key: "<%=process.env.RAZOR_PAY_KEY_ID%>",
                        amount: parseInt(data.data.amount),
                        currency: data.data.currency,
                        name: "FoodWo",
                        description: "Test Transaction",
                        image: "/public/images/android-chrome-512x512.png",
                        order_id: data.data.id,
                        handler: async (response) => {
                            try {
                                console.log('response :', response)
                                const verifyUrl = '/verify'
                                const datas = await axios.post(verifyUrl, response)
                                console.log('verifyData : ', datas)
                                if (datas.status === 200) {
                                    const user_id = sessionStorage.getItem('user_id');
                                    const customerName = sessionStorage.getItem('username');
                                    const addedAmt = { amount: parseInt(data.data.amount) }
                                    const reqData = JSON.stringify(addedAmt)
                                    const res = await fetch(`/addto-wallet/${user_id}`, {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': "application/json"
                                        },
                                        body: reqData
                                    })

                                    if (res.ok) {
                                        const resData = await res.json();
                                        if (resData.added) {
                                            window.scrollTo(0, 0)
                                            alertBox.classList.remove('opacity-0')
                                            alertBox.classList.remove('-translate-x-full')
                                            alertMsg.innerText = `amount added successfully`;
                                            setTimeout(() => {
                                                alertBox.classList.add('opacity-0')
                                                alertBox.classList.add('-translate-x-full')
                                                window.location.reload();
                                            }, 3000)
                                        }
                                    } else {
                                        window.scrollTo(0, 0)
                                        alertBox.classList.remove('opacity-0')
                                        alertBox.classList.remove('-translate-x-full')
                                        alertMsg.innerText = `something went wrong.please try again`;
                                        setTimeout(() => {
                                            alertBox.classList.add('opacity-0')
                                            alertBox.classList.add('-translate-x-full')
                                        }, 3000)
                                    }
                                }
                            } catch (error) {
                                console.log(error);
                            }
                        },
                        theme: {
                            color: "#F97316"
                        }
                    }
                    const rzpl = new window.Razorpay(options)
                    rzpl.open()
                }

                async function addMoney(event) {
                    if (!selectedAmt) {
                        window.scrollTo(0, 0)
                        alertBox.classList.remove('opacity-0')
                        alertBox.classList.remove('-translate-x-full')
                        alertMsg.innerText = `select any one of the amount`;
                        setTimeout(() => {
                            alertBox.classList.add('opacity-0')
                            alertBox.classList.add('-translate-x-full')
                        }, 3000)
                        return
                    }
                    try {
                        const orderUrl = '/orders'
                        const paying = await axios.post(orderUrl, { amount: selectedAmt })
                        console.log(paying)
                        initPayment(paying.data)
                    } catch (error) {
                        console.log(error)
                    }
                }
            </script>
</body>

</html>